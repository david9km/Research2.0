
printArray:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x1ab>
  400248:	78 38                	js     400282 <_init-0x19e>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 58 18             	add    %bl,0x18(%rax)
  400286:	d0 16                	rclb   (%rsi)
  400288:	17                   	(bad)  
  400289:	b2 8c                	mov    $0x8c,%dl
  40028b:	35 8d 26 c4 19       	xor    $0x19c4268d,%eax
  400290:	c4                   	(bad)  
  400291:	f2 f5                	repnz cmc 
  400293:	db                   	.byte 0xdb
  400294:	2d                   	.byte 0x2d
  400295:	d9 60 45             	fldenv 0x45(%rax)

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	13 00                	adc    (%rax),%eax
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	1a 00                	sbb    (%rax),%al
  400302:	00 00                	add    %al,(%rax)
  400304:	12 00                	adc    (%rax),%al
	...
  400316:	00 00                	add    %al,(%rax)
  400318:	2c 00                	sub    $0x0,%al
  40031a:	00 00                	add    %al,(%rax)
  40031c:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400330 <.dynstr>:
  400330:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400334:	63 2e                	movslq (%rsi),%ebp
  400336:	73 6f                	jae    4003a7 <_init-0x79>
  400338:	2e 36 00 70 75       	cs add %dh,%ss:0x75(%rax)
  40033d:	74 63                	je     4003a2 <_init-0x7e>
  40033f:	68 61 72 00 70       	pushq  $0x70007261
  400344:	72 69                	jb     4003af <_init-0x71>
  400346:	6e                   	outsb  %ds:(%rsi),(%dx)
  400347:	74 66                	je     4003af <_init-0x71>
  400349:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40034c:	6c                   	insb   (%dx),%es:(%rdi)
  40034d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400354:	72 74                	jb     4003ca <_init-0x56>
  400356:	5f                   	pop    %rdi
  400357:	6d                   	insl   (%dx),%es:(%rdi)
  400358:	61                   	(bad)  
  400359:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400360:	6f                   	outsl  %ds:(%rsi),(%dx)
  400361:	6e                   	outsb  %ds:(%rsi),(%dx)
  400362:	5f                   	pop    %rdi
  400363:	73 74                	jae    4003d9 <_init-0x47>
  400365:	61                   	(bad)  
  400366:	72 74                	jb     4003dc <_init-0x44>
  400368:	5f                   	pop    %rdi
  400369:	5f                   	pop    %rdi
  40036a:	00 47 4c             	add    %al,0x4c(%rdi)
  40036d:	49                   	rex.WB
  40036e:	42                   	rex.X
  40036f:	43 5f                	rex.XB pop %r15
  400371:	32 2e                	xor    (%rsi),%ch
  400373:	32 2e                	xor    (%rsi),%ch
  400375:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400378 <.gnu.version>:
  400378:	00 00                	add    %al,(%rax)
  40037a:	02 00                	add    (%rax),%al
  40037c:	02 00                	add    (%rax),%al
  40037e:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400388 <.gnu.version_r>:
  400388:	01 00                	add    %eax,(%rax)
  40038a:	01 00                	add    %eax,(%rax)
  40038c:	01 00                	add    %eax,(%rax)
  40038e:	00 00                	add    %al,(%rax)
  400390:	10 00                	adc    %al,(%rax)
  400392:	00 00                	add    %al,(%rax)
  400394:	00 00                	add    %al,(%rax)
  400396:	00 00                	add    %al,(%rax)
  400398:	75 1a                	jne    4003b4 <_init-0x6c>
  40039a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003a0:	3b 00                	cmp    (%rax),%eax
  4003a2:	00 00                	add    %al,(%rax)
  4003a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003a8 <.rela.dyn>:
  4003a8:	f8                   	clc    
  4003a9:	0f 60 00             	punpcklbw (%rax),%mm0
  4003ac:	00 00                	add    %al,(%rax)
  4003ae:	00 00                	add    %al,(%rax)
  4003b0:	06                   	(bad)  
  4003b1:	00 00                	add    %al,(%rax)
  4003b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000004003c0 <.rela.plt>:
  4003c0:	18 10                	sbb    %dl,(%rax)
  4003c2:	60                   	(bad)  
  4003c3:	00 00                	add    %al,(%rax)
  4003c5:	00 00                	add    %al,(%rax)
  4003c7:	00 07                	add    %al,(%rdi)
  4003c9:	00 00                	add    %al,(%rax)
  4003cb:	00 01                	add    %al,(%rcx)
	...
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 20                	add    %ah,(%rax)
  4003d9:	10 60 00             	adc    %ah,0x0(%rax)
  4003dc:	00 00                	add    %al,(%rax)
  4003de:	00 00                	add    %al,(%rax)
  4003e0:	07                   	(bad)  
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 02                	add    %al,(%rdx)
	...
  4003ed:	00 00                	add    %al,(%rax)
  4003ef:	00 28                	add    %ch,(%rax)
  4003f1:	10 60 00             	adc    %ah,0x0(%rax)
  4003f4:	00 00                	add    %al,(%rax)
  4003f6:	00 00                	add    %al,(%rax)
  4003f8:	07                   	(bad)  
  4003f9:	00 00                	add    %al,(%rax)
  4003fb:	00 03                	add    %al,(%rbx)
	...
  400405:	00 00                	add    %al,(%rax)
  400407:	00 30                	add    %dh,(%rax)
  400409:	10 60 00             	adc    %ah,0x0(%rax)
  40040c:	00 00                	add    %al,(%rax)
  40040e:	00 00                	add    %al,(%rax)
  400410:	07                   	(bad)  
  400411:	00 00                	add    %al,(%rax)
  400413:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000400420 <_init>:
  400420:	48 83 ec 08          	sub    $0x8,%rsp
  400424:	48 8b 05 cd 0b 20 00 	mov    0x200bcd(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  40042b:	48 85 c0             	test   %rax,%rax
  40042e:	74 05                	je     400435 <_init+0x15>
  400430:	e8 4b 00 00 00       	callq  400480 <__gmon_start__@plt>
  400435:	48 83 c4 08          	add    $0x8,%rsp
  400439:	c3                   	retq   

Disassembly of section .plt:

0000000000400440 <putchar@plt-0x10>:
  400440:	ff 35 c2 0b 20 00    	pushq  0x200bc2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400446:	ff 25 c4 0b 20 00    	jmpq   *0x200bc4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40044c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400450 <putchar@plt>:
  400450:	ff 25 c2 0b 20 00    	jmpq   *0x200bc2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400456:	68 00 00 00 00       	pushq  $0x0
  40045b:	e9 e0 ff ff ff       	jmpq   400440 <_init+0x20>

0000000000400460 <printf@plt>:
  400460:	ff 25 ba 0b 20 00    	jmpq   *0x200bba(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400466:	68 01 00 00 00       	pushq  $0x1
  40046b:	e9 d0 ff ff ff       	jmpq   400440 <_init+0x20>

0000000000400470 <__libc_start_main@plt>:
  400470:	ff 25 b2 0b 20 00    	jmpq   *0x200bb2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400476:	68 02 00 00 00       	pushq  $0x2
  40047b:	e9 c0 ff ff ff       	jmpq   400440 <_init+0x20>

0000000000400480 <__gmon_start__@plt>:
  400480:	ff 25 aa 0b 20 00    	jmpq   *0x200baa(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400486:	68 03 00 00 00       	pushq  $0x3
  40048b:	e9 b0 ff ff ff       	jmpq   400440 <_init+0x20>

Disassembly of section .text:

0000000000400490 <_start>:
  400490:	31 ed                	xor    %ebp,%ebp
  400492:	49 89 d1             	mov    %rdx,%r9
  400495:	5e                   	pop    %rsi
  400496:	48 89 e2             	mov    %rsp,%rdx
  400499:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40049d:	50                   	push   %rax
  40049e:	54                   	push   %rsp
  40049f:	49 c7 c0 b0 06 40 00 	mov    $0x4006b0,%r8
  4004a6:	48 c7 c1 40 06 40 00 	mov    $0x400640,%rcx
  4004ad:	48 c7 c7 7d 05 40 00 	mov    $0x40057d,%rdi
  4004b4:	e8 b7 ff ff ff       	callq  400470 <__libc_start_main@plt>
  4004b9:	f4                   	hlt    
  4004ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004c0 <deregister_tm_clones>:
  4004c0:	b8 47 10 60 00       	mov    $0x601047,%eax
  4004c5:	55                   	push   %rbp
  4004c6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004cc:	48 83 f8 0e          	cmp    $0xe,%rax
  4004d0:	48 89 e5             	mov    %rsp,%rbp
  4004d3:	77 02                	ja     4004d7 <deregister_tm_clones+0x17>
  4004d5:	5d                   	pop    %rbp
  4004d6:	c3                   	retq   
  4004d7:	b8 00 00 00 00       	mov    $0x0,%eax
  4004dc:	48 85 c0             	test   %rax,%rax
  4004df:	74 f4                	je     4004d5 <deregister_tm_clones+0x15>
  4004e1:	5d                   	pop    %rbp
  4004e2:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004e7:	ff e0                	jmpq   *%rax
  4004e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004004f0 <register_tm_clones>:
  4004f0:	b8 40 10 60 00       	mov    $0x601040,%eax
  4004f5:	55                   	push   %rbp
  4004f6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004fc:	48 c1 f8 03          	sar    $0x3,%rax
  400500:	48 89 e5             	mov    %rsp,%rbp
  400503:	48 89 c2             	mov    %rax,%rdx
  400506:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40050a:	48 01 d0             	add    %rdx,%rax
  40050d:	48 d1 f8             	sar    %rax
  400510:	75 02                	jne    400514 <register_tm_clones+0x24>
  400512:	5d                   	pop    %rbp
  400513:	c3                   	retq   
  400514:	ba 00 00 00 00       	mov    $0x0,%edx
  400519:	48 85 d2             	test   %rdx,%rdx
  40051c:	74 f4                	je     400512 <register_tm_clones+0x22>
  40051e:	5d                   	pop    %rbp
  40051f:	48 89 c6             	mov    %rax,%rsi
  400522:	bf 40 10 60 00       	mov    $0x601040,%edi
  400527:	ff e2                	jmpq   *%rdx
  400529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400530 <__do_global_dtors_aux>:
  400530:	80 3d 05 0b 20 00 00 	cmpb   $0x0,0x200b05(%rip)        # 60103c <_edata>
  400537:	75 11                	jne    40054a <__do_global_dtors_aux+0x1a>
  400539:	55                   	push   %rbp
  40053a:	48 89 e5             	mov    %rsp,%rbp
  40053d:	e8 7e ff ff ff       	callq  4004c0 <deregister_tm_clones>
  400542:	5d                   	pop    %rbp
  400543:	c6 05 f2 0a 20 00 01 	movb   $0x1,0x200af2(%rip)        # 60103c <_edata>
  40054a:	f3 c3                	repz retq 
  40054c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400550 <frame_dummy>:
  400550:	48 83 3d c8 08 20 00 	cmpq   $0x0,0x2008c8(%rip)        # 600e20 <__JCR_END__>
  400557:	00 
  400558:	74 1e                	je     400578 <frame_dummy+0x28>
  40055a:	b8 00 00 00 00       	mov    $0x0,%eax
  40055f:	48 85 c0             	test   %rax,%rax
  400562:	74 14                	je     400578 <frame_dummy+0x28>
  400564:	55                   	push   %rbp
  400565:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40056a:	48 89 e5             	mov    %rsp,%rbp
  40056d:	ff d0                	callq  *%rax
  40056f:	5d                   	pop    %rbp
  400570:	e9 7b ff ff ff       	jmpq   4004f0 <register_tm_clones>
  400575:	0f 1f 00             	nopl   (%rax)
  400578:	e9 73 ff ff ff       	jmpq   4004f0 <register_tm_clones>

000000000040057d <main>:
  40057d:	55                   	push   %rbp
  40057e:	48 89 e5             	mov    %rsp,%rbp
  400581:	48 83 ec 50          	sub    $0x50,%rsp
  400585:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40058c:	c7 45 b0 07 00 00 00 	movl   $0x7,-0x50(%rbp)
  400593:	c7 45 b4 02 00 00 00 	movl   $0x2,-0x4c(%rbp)
  40059a:	c7 45 b8 09 00 00 00 	movl   $0x9,-0x48(%rbp)
  4005a1:	c7 45 bc 12 00 00 00 	movl   $0x12,-0x44(%rbp)
  4005a8:	c7 45 c0 36 00 00 00 	movl   $0x36,-0x40(%rbp)
  4005af:	c7 45 c4 4f 00 00 00 	movl   $0x4f,-0x3c(%rbp)
  4005b6:	c7 45 c8 65 00 00 00 	movl   $0x65,-0x38(%rbp)
  4005bd:	c7 45 cc 08 00 00 00 	movl   $0x8,-0x34(%rbp)
  4005c4:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)
  4005cb:	c7 45 d4 15 00 00 00 	movl   $0x15,-0x2c(%rbp)
  4005d2:	c7 45 d8 22 00 00 00 	movl   $0x22,-0x28(%rbp)
  4005d9:	c7 45 dc 42 00 00 00 	movl   $0x42,-0x24(%rbp)
  4005e0:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
  4005e7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  4005ee:	c7 45 e8 66 00 00 00 	movl   $0x66,-0x18(%rbp)
  4005f5:	c7 45 ec 13 00 00 00 	movl   $0x13,-0x14(%rbp)
  4005fc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400603:	eb 1e                	jmp    400623 <main+0xa6>
  400605:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400608:	48 98                	cltq   
  40060a:	8b 44 85 b0          	mov    -0x50(%rbp,%rax,4),%eax
  40060e:	89 c6                	mov    %eax,%esi
  400610:	bf d0 06 40 00       	mov    $0x4006d0,%edi
  400615:	b8 00 00 00 00       	mov    $0x0,%eax
  40061a:	e8 41 fe ff ff       	callq  400460 <printf@plt>
  40061f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  400623:	83 7d fc 0f          	cmpl   $0xf,-0x4(%rbp)
  400627:	7e dc                	jle    400605 <main+0x88>
  400629:	bf 0a 00 00 00       	mov    $0xa,%edi
  40062e:	e8 1d fe ff ff       	callq  400450 <putchar@plt>
  400633:	b8 00 00 00 00       	mov    $0x0,%eax
  400638:	c9                   	leaveq 
  400639:	c3                   	retq   
  40063a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400640 <__libc_csu_init>:
  400640:	41 57                	push   %r15
  400642:	41 89 ff             	mov    %edi,%r15d
  400645:	41 56                	push   %r14
  400647:	49 89 f6             	mov    %rsi,%r14
  40064a:	41 55                	push   %r13
  40064c:	49 89 d5             	mov    %rdx,%r13
  40064f:	41 54                	push   %r12
  400651:	4c 8d 25 b8 07 20 00 	lea    0x2007b8(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400658:	55                   	push   %rbp
  400659:	48 8d 2d b8 07 20 00 	lea    0x2007b8(%rip),%rbp        # 600e18 <__init_array_end>
  400660:	53                   	push   %rbx
  400661:	4c 29 e5             	sub    %r12,%rbp
  400664:	31 db                	xor    %ebx,%ebx
  400666:	48 c1 fd 03          	sar    $0x3,%rbp
  40066a:	48 83 ec 08          	sub    $0x8,%rsp
  40066e:	e8 ad fd ff ff       	callq  400420 <_init>
  400673:	48 85 ed             	test   %rbp,%rbp
  400676:	74 1e                	je     400696 <__libc_csu_init+0x56>
  400678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40067f:	00 
  400680:	4c 89 ea             	mov    %r13,%rdx
  400683:	4c 89 f6             	mov    %r14,%rsi
  400686:	44 89 ff             	mov    %r15d,%edi
  400689:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40068d:	48 83 c3 01          	add    $0x1,%rbx
  400691:	48 39 eb             	cmp    %rbp,%rbx
  400694:	75 ea                	jne    400680 <__libc_csu_init+0x40>
  400696:	48 83 c4 08          	add    $0x8,%rsp
  40069a:	5b                   	pop    %rbx
  40069b:	5d                   	pop    %rbp
  40069c:	41 5c                	pop    %r12
  40069e:	41 5d                	pop    %r13
  4006a0:	41 5e                	pop    %r14
  4006a2:	41 5f                	pop    %r15
  4006a4:	c3                   	retq   
  4006a5:	90                   	nop
  4006a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006ad:	00 00 00 

00000000004006b0 <__libc_csu_fini>:
  4006b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004006b4 <_fini>:
  4006b4:	48 83 ec 08          	sub    $0x8,%rsp
  4006b8:	48 83 c4 08          	add    $0x8,%rsp
  4006bc:	c3                   	retq   

Disassembly of section .rodata:

00000000004006c0 <_IO_stdin_used>:
  4006c0:	01 00                	add    %eax,(%rax)
  4006c2:	02 00                	add    (%rax),%al
  4006c4:	00 00                	add    %al,(%rax)
	...

00000000004006c8 <__dso_handle>:
	...
  4006d0:	25 64 20 20 00       	and    $0x202064,%eax

Disassembly of section .eh_frame_hdr:

00000000004006d8 <.eh_frame_hdr>:
  4006d8:	01 1b                	add    %ebx,(%rbx)
  4006da:	03 3b                	add    (%rbx),%edi
  4006dc:	34 00                	xor    $0x0,%al
  4006de:	00 00                	add    %al,(%rax)
  4006e0:	05 00 00 00 68       	add    $0x68000000,%eax
  4006e5:	fd                   	std    
  4006e6:	ff                   	(bad)  
  4006e7:	ff 80 00 00 00 b8    	incl   -0x48000000(%rax)
  4006ed:	fd                   	std    
  4006ee:	ff                   	(bad)  
  4006ef:	ff 50 00             	callq  *0x0(%rax)
  4006f2:	00 00                	add    %al,(%rax)
  4006f4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  4006f5:	fe                   	(bad)  
  4006f6:	ff                   	(bad)  
  4006f7:	ff a8 00 00 00 68    	ljmpq  *0x68000000(%rax)
  4006fd:	ff                   	(bad)  
  4006fe:	ff                   	(bad)  
  4006ff:	ff c8                	dec    %eax
  400701:	00 00                	add    %al,(%rax)
  400703:	00 d8                	add    %bl,%al
  400705:	ff                   	(bad)  
  400706:	ff                   	(bad)  
  400707:	ff 10                	callq  *(%rax)
  400709:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000400710 <__FRAME_END__-0xf0>:
  400710:	14 00                	adc    $0x0,%al
  400712:	00 00                	add    %al,(%rax)
  400714:	00 00                	add    %al,(%rax)
  400716:	00 00                	add    %al,(%rax)
  400718:	01 7a 52             	add    %edi,0x52(%rdx)
  40071b:	00 01                	add    %al,(%rcx)
  40071d:	78 10                	js     40072f <__dso_handle+0x67>
  40071f:	01 1b                	add    %ebx,(%rbx)
  400721:	0c 07                	or     $0x7,%al
  400723:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400729:	00 00                	add    %al,(%rax)
  40072b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40072e:	00 00                	add    %al,(%rax)
  400730:	60                   	(bad)  
  400731:	fd                   	std    
  400732:	ff                   	(bad)  
  400733:	ff 2a                	ljmpq  *(%rdx)
	...
  40073d:	00 00                	add    %al,(%rax)
  40073f:	00 14 00             	add    %dl,(%rax,%rax,1)
  400742:	00 00                	add    %al,(%rax)
  400744:	00 00                	add    %al,(%rax)
  400746:	00 00                	add    %al,(%rax)
  400748:	01 7a 52             	add    %edi,0x52(%rdx)
  40074b:	00 01                	add    %al,(%rcx)
  40074d:	78 10                	js     40075f <__dso_handle+0x97>
  40074f:	01 1b                	add    %ebx,(%rbx)
  400751:	0c 07                	or     $0x7,%al
  400753:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400759:	00 00                	add    %al,(%rax)
  40075b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40075e:	00 00                	add    %al,(%rax)
  400760:	e0 fc                	loopne 40075e <__dso_handle+0x96>
  400762:	ff                   	(bad)  
  400763:	ff 50 00             	callq  *0x0(%rax)
  400766:	00 00                	add    %al,(%rax)
  400768:	00 0e                	add    %cl,(%rsi)
  40076a:	10 46 0e             	adc    %al,0xe(%rsi)
  40076d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400770:	0b 77 08             	or     0x8(%rdi),%esi
  400773:	80 00 3f             	addb   $0x3f,(%rax)
  400776:	1a 3b                	sbb    (%rbx),%bh
  400778:	2a 33                	sub    (%rbx),%dh
  40077a:	24 22                	and    $0x22,%al
  40077c:	00 00                	add    %al,(%rax)
  40077e:	00 00                	add    %al,(%rax)
  400780:	1c 00                	sbb    $0x0,%al
  400782:	00 00                	add    %al,(%rax)
  400784:	44 00 00             	add    %r8b,(%rax)
  400787:	00 f5                	add    %dh,%ch
  400789:	fd                   	std    
  40078a:	ff                   	(bad)  
  40078b:	ff                   	(bad)  
  40078c:	bd 00 00 00 00       	mov    $0x0,%ebp
  400791:	41 0e                	rex.B (bad) 
  400793:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400799:	02 b8 0c 07 08 00    	add    0x8070c(%rax),%bh
  40079f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  4007a3:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
  4007a7:	00 98 fe ff ff 65    	add    %bl,0x65fffffe(%rax)
  4007ad:	00 00                	add    %al,(%rax)
  4007af:	00 00                	add    %al,(%rax)
  4007b1:	42 0e                	rex.X (bad) 
  4007b3:	10 8f 02 45 0e 18    	adc    %cl,0x180e4502(%rdi)
  4007b9:	8e 03                	mov    (%rbx),%es
  4007bb:	45 0e                	rex.RB (bad) 
  4007bd:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
  4007c3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701611 <__TMC_END__+0xffffffff861005d1>
  4007c9:	06                   	(bad)  
  4007ca:	48 0e                	rex.W (bad) 
  4007cc:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4007d2:	6c                   	insb   (%dx),%es:(%rdi)
  4007d3:	0e                   	(bad)  
  4007d4:	38 41 0e             	cmp    %al,0xe(%rcx)
  4007d7:	30 41 0e             	xor    %al,0xe(%rcx)
  4007da:	28 42 0e             	sub    %al,0xe(%rdx)
  4007dd:	20 42 0e             	and    %al,0xe(%rdx)
  4007e0:	18 42 0e             	sbb    %al,0xe(%rdx)
  4007e3:	10 42 0e             	adc    %al,0xe(%rdx)
  4007e6:	08 00                	or     %al,(%rax)
  4007e8:	14 00                	adc    $0x0,%al
  4007ea:	00 00                	add    %al,(%rax)
  4007ec:	ac                   	lods   %ds:(%rsi),%al
  4007ed:	00 00                	add    %al,(%rax)
  4007ef:	00 c0                	add    %al,%al
  4007f1:	fe                   	(bad)  
  4007f2:	ff                   	(bad)  
  4007f3:	ff 02                	incl   (%rdx)
	...

0000000000400800 <__FRAME_END__>:
  400800:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	50                   	push   %rax
  600e11:	05 40 00 00 00       	add    $0x40,%eax
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	30 05 40 00 00 00    	xor    %al,0x40(%rip)        # 600e5e <_DYNAMIC+0x36>
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	20 04 40             	and    %al,(%rax,%rax,2)
  600e43:	00 00                	add    %al,(%rax)
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 b4 06 40 00 00 00 	add    %dh,0x40(%rsi,%rax,1)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	19 00                	sbb    %eax,(%rax)
  600e5a:	00 00                	add    %al,(%rax)
  600e5c:	00 00                	add    %al,(%rax)
  600e5e:	00 00                	add    %al,(%rax)
  600e60:	10 0e                	adc    %cl,(%rsi)
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 30                	add    %dh,(%rax)
  600eb1:	03 40 00             	add    0x0(%rax),%eax
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 47 00             	add    %al,0x0(%rdi)
  600ed2:	00 00                	add    %al,(%rax)
  600ed4:	00 00                	add    %al,(%rax)
  600ed6:	00 00                	add    %al,(%rax)
  600ed8:	0b 00                	or     (%rax),%eax
  600eda:	00 00                	add    %al,(%rax)
  600edc:	00 00                	add    %al,(%rax)
  600ede:	00 00                	add    %al,(%rax)
  600ee0:	18 00                	sbb    %al,(%rax)
  600ee2:	00 00                	add    %al,(%rax)
  600ee4:	00 00                	add    %al,(%rax)
  600ee6:	00 00                	add    %al,(%rax)
  600ee8:	15 00 00 00 00       	adc    $0x0,%eax
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	60                   	(bad)  
  600f11:	00 00                	add    %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 14 00             	add    %dl,(%rax,%rax,1)
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 c0                	add    %al,%al
  600f31:	03 40 00             	add    0x0(%rax),%eax
  600f34:	00 00                	add    %al,(%rax)
  600f36:	00 00                	add    %al,(%rax)
  600f38:	07                   	(bad)  
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 a8 03 40 00 00    	add    %ch,0x4003(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 18                	add    %bl,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 88 03 40 00 00    	add    %cl,0x4003(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 78 03             	add    %bh,0x3(%rax)
  600f92:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 56 04             	add    %dl,0x4(%rsi)
  60101a:	40 00 00             	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 66 04             	add    %ah,0x4(%rsi)
  601022:	40 00 00             	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
  601027:	00 76 04             	add    %dh,0x4(%rsi)
  60102a:	40 00 00             	add    %al,(%rax)
  60102d:	00 00                	add    %al,(%rax)
  60102f:	00 86 04 40 00 00    	add    %al,0x4004(%rsi)
  601035:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601038 <__data_start>:
  601038:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000060103c <__bss_start>:
  60103c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	34 2e                	xor    $0x2e,%al
   d:	38 2e                	cmp    %ch,(%rsi)
   f:	35 20 32 30 31       	xor    $0x31303220,%eax
  14:	35 30 36 32 33       	xor    $0x33323630,%eax
  19:	20 28                	and    %ch,(%rax)
  1b:	52                   	push   %rdx
  1c:	65 64 20 48 61       	gs and %cl,%fs:0x61(%rax)
  21:	74 20                	je     43 <_init-0x4003dd>
  23:	34 2e                	xor    $0x2e,%al
  25:	38 2e                	cmp    %ch,(%rsi)
  27:	35 2d 31 36 29       	xor    $0x2936312d,%eax
	...
